/*
    Taken from sample android kotlin app template
    https://github.com/jaredsburrows/android-gradle-kotlin-app-template/blob/master/gradle/codeQuality.gradle
 */

apply plugin: "jacoco"
apply plugin: "com.github.kt3k.coveralls"

android.applicationVariants.all{variant ->
    def variantName = variant.name.capitalize()
    def autoGenerated = ['**/R.class',
                         '**/R$*.class',
                         '**/Manifest*.*',
                         'android/**/*.*',
                         '**/BuildConfig.*',
                         '**/*$ViewBinder*.*',
                         '**/*$ViewInjector*.*',
                         '**/Lambda$*.class',
                         '**/Lambda.class',
                         '**/*Lambda.class',
                         '**/*Lambda*.class']

    /**
     * Generates Jacoco coverage reports based off the unit tests.
     */
    task("jacoco${variantName}Report", type: JacocoReport, dependsOn: "test${variantName}UnitTest") {
        group "Reporting"
        description "Generate ${variantName} Jacoco coverage reports."

        reports {
            xml.enabled = true
            html.enabled = true
        }

        // variant.javaCompile.source does not work
        // traverses from starting point
        sourceDirectories = files(android.sourceSets.main.java.srcDirs)
        executionData = files("${buildDir}/jacoco/test${variantName}UnitTest.exec")
        classDirectories = fileTree(dir: variant.javaCompiler.destinationDir, excludes: autoGenerated)
    }
}

// Only allows specifying of a single file
coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoDebugReport/jacocoDebugReport.xml"
}