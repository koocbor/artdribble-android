buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.kt3k.coveralls'

apply from: "$rootDir/utils.gradle"

def Properties secureStrings = new Properties()
def secureStringsFile = file('securestrings.properties')
if (secureStringsFile.exists()) {
    secureStrings.load(new FileInputStream(secureStringsFile))
} else {
    secureStrings["DRIBBLE_API_HOST"] = DRIBBLE_API_HOST
    secureStrings["DRIBBLE_CLIENT_ID"] = DRIBBLE_CLIENT_ID
    secureStrings["DRIBBLE_CLIENT_SECRET"] = DRIBBLE_CLIENT_SECRET
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "com.artdribble.android"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "DRIBBLE_API_HOST", toJavaCodeString(secureStrings["DRIBBLE_API_HOST"])
        buildConfigField "String", "DRIBBLE_CLIENT_ID", toJavaCodeString(secureStrings["DRIBBLE_CLIENT_ID"])
        buildConfigField "String", "DRIBBLE_CLIENT_SECRET", toJavaCodeString(secureStrings["DRIBBLE_CLIENT_SECRET"])
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
}

ext {
    androidSupportVersion = '25.3.1'
    daggerVersion = '2.10'
}

kapt {
    generateStubs = true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:appcompat-v7:${androidSupportVersion}"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    compile 'com.squareup.okhttp3:okhttp:3.8.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.google.code.gson:gson:2.7'

    compile "com.google.dagger:dagger:${daggerVersion}"
    compile "com.google.dagger:dagger-android-support:${daggerVersion}"
    kapt "com.google.dagger:dagger-compiler:${daggerVersion}"

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    compile 'com.github.bumptech.glide:glide:4.0.0-RC0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0-RC0'

    compile 'jp.wasabeef:blurry:2.1.1'

    testCompile 'junit:junit:4.12'
    testCompile 'com.github.javafaker:javafaker:0.13'
    androidTestCompile 'com.google.code.findbugs:jsr305:3.0.1'  // Necessary for Dagger to compile.
    testCompile 'org.mockito:mockito-core:2.7.21'
    testCompile "org.robolectric:robolectric:3.3.2"
    testCompile "org.robolectric:shadows-support-v4:3.3.2"

}
repositories {
    mavenCentral()
}
